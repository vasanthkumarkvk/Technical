class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
        self.prev = None

class DoublyLinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            current_node = self.head
            while current_node.next is not None:
                current_node = current_node.next
            current_node.next = new_node
            new_node.prev = current_node

    def display(self):
        current_node = self.head
        while current_node is not None:
            print(current_node.data)
            current_node = current_node.next

    def display_reverse(self):
        current_node = self.head
        while current_node.next is not None:
            current_node = current_node.next
        while current_node is not None:
            print(current_node.data)
            current_node = current_node.prev

dll = DoublyLinkedList()
dll.append(1)
dll.append(2)
dll.append(3)

print("Forward traversal:")
dll.display()

print("Reverse traversal:")
dll.display_reverse()

[ OUTPUT OF THE PROGRAM.
Forward traversal:
1
2
3
Reverse traversal:
3
2
1
> ].
